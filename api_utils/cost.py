"""
Token cost calculation utilities for Satoshi AI API
"""
from typing import Dict, Optional, Any


def calculate_token_cost(
    llm_input_tokens: int = 0, 
    llm_output_tokens: int = 0, 
    openai_usage: Optional[Dict[str, int]] = None,
    is_image: bool = False
) -> int:
    """
    Calculate the total token cost with appropriate discounts/surcharges.
    
    Args:
        llm_input_tokens: Number of tokens in the prompt to the local LLM
        llm_output_tokens: Number of tokens generated by the local LLM
        openai_usage: Dictionary containing OpenAI token usage (if available)
        is_image: Whether this is an image generation request
    
    Returns:
        int: The calculated token cost as a whole number
    """
    # Apply 20% discount to LLM tokens
    llm_tokens = (llm_input_tokens + llm_output_tokens)
    discounted_llm_tokens = llm_tokens * 0.8
    
    # Calculate OpenAI tokens
    openai_tokens = 0
    if openai_usage:
        if "prompt_tokens" in openai_usage:
            openai_tokens += openai_usage["prompt_tokens"]
        if "completion_tokens" in openai_usage:
            openai_tokens += openai_usage["completion_tokens"]
        if "total_tokens" in openai_usage and openai_tokens == 0:
            openai_tokens = openai_usage["total_tokens"]
    
    # Add them together
    total_token_cost = discounted_llm_tokens + openai_tokens
    
    # Add 20% surcharge for image generations
    if is_image:
        total_token_cost *= 1.2
    
    # Round to the nearest whole number
    return round(total_token_cost) 